.NET ------------------------------------------------------------

Criar projeto .NET:
    dotnet new sln
    dotnet new webapi -o api
    dotnet sln add api

Run:
    dotnet watch run
    npm start

Migrations ------------------------------------------------------------

Criar migration inicial definindo pasta de m igrations:
    dotnet ef migrations add PostgresInitial -o Data/Migrations

Criar migration:
    dotnet ef migrations add ExtendedUserEntity
    dotnet ef database update (implementa até última migration, mesmo efeito de rodar a api)

Desfazer migration m:
    dotnet ef database update 'nome m-1'

Remove último migration m:
    dotnet ef database update 'nome m-1'
    dotnet ef migrations remove

Recriar as tabelas:
    dotnet ef database drop
    dotnet ef database update (implementa até última migration, mesmo efeito de rodar a api)

Deletar as tabelas:
    dotnet ef database drop

Angular ------------------------------------------------------------

Criar projeto Angular:
    npm install -g @angular/cli
    ng new client

Angular Component:
    ng g c nav --skip-tests

Angular Service:
    ng g s account --skip-tests

Angular Guard:
    ng g guard auth --skip-tests

Angular Module:
    ng g m shared --flat

Angular Interceptor:
    ng g interceptor error --skip-tests

Angular Interceptor:
    ng g r member-detail --skip-tests

Angular Directives:
    ng g d has-role --skip-tests

Gera versão em memoria fisica dos arquivos do angular:
    ng build

Gera versão em memoria fisica dos arquivos do angular d eforma otimizada, para produção:
    ng build --prod

// Anotação para receber propriedades para um componente pai
@Input() member: MemberModel;

// Anotação para enviar propriedades para um componente pai
@Output() cancelRegisterToHomeComponent = new EventEmitter();

// Anotação para referenciar o formulário dentro do componente
@ViewChild("editForm") editForm: NgForm;

Git ------------------------------------------------------------

Deletar push na cloud:
    git rebase -i HEAD~2
    Apagada segunda linha do arquivo que vai abrir e digita :wq e enter
    git push --force

Removing the last commit:
    To remove the last commit from git, you can simply run git reset --hard HEAD^ If you are removing multiple commits from the top, you can run git reset --hard HEAD~2 to remove the last two commits. You can increase the number to remove even more commits.
    If you want to "uncommit" the commits, but keep the changes around for reworking, remove the "--hard": git reset HEAD^ which will evict the commits from the branch and from the index, but leave the working tree around.
    If you want to save the commits on a new branch name, then run git branch newbranchname before doing the git reset.
    ORIGINAL did fork but search didn't helped me
    
Docker ------------------------------------------------------------

docker run --name dev -e POSTGRES_USER=appuser -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres:latest

Heroku ------------------------------------------------------------

Enviar para Heroku. Para enviar o código para lá deve ser feito o commit antes.
    git push heroku master
    git push heroku master --force
